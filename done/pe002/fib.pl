#!/usr/bin/perl

use strict;
use warnings;

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Find the sum of all the even-valued terms in the sequence which do not exceed
# four million.

my $max = $ARGV[0] || 999999999;
my $sum = 0;

for (0 .. $max) {
    my $f = fib($_);
    last if $f > 4_000_000;
    next if $f % 2;
    $sum += $f;
}

print $sum, "\n";

{
    my %cache;
    sub fib {
        my $n = shift;
        return 0 if $n < 0;
        return 1 if $n == 0;
        return 1 if $n == 1;
        return 2 if $n == 2;
        $cache{$n} ||= fib($n - 1) + fib($n - 2);
    }
}

